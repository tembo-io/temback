name: üç™ Bake Docker Image

on:
  push:

permissions:
  id-token: write
  contents: read

jobs:
  bake:
    name: üç™ Bake Image
    runs-on:
      - runs-on=${{ github.run_id }}
      - runner=small-amd64
      - private=true
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
      - name: Setup Go
        uses: actions/setup-go@v5
        with: { go-version-file: go.mod, check-latest: true }
      - name: Configure AWS credentials for ECR
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.GHA_IAM_ROLE }}
          role-session-name: temback-gha-docker-build-and-push
          aws-region: us-east-1
      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v2
      - name: Login to Docker Hub # required for un-throttled pulls
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Login to Quay.io
        uses: docker/login-action@v3
        with:
          registry: quay.io
          username: ${{ secrets.QUAY_USER_TEMBO }}
          password: ${{ secrets.QUAY_PASSWORD_TEMBO }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Build${{ startsWith(github.ref, 'refs/tags') && ' and Push' || '' }}
        env:
          REGISTRY: quay.io/tembo/temback
          ECR_REGISTRY: ${{ secrets.ECR_REGISTRY }}
          PUSH: "${{ startsWith(github.ref, 'refs/tags') }}"
        run: |
          make image
          if [ "$PUSH" = "true" ]; then
            # Tag and push to ECR
            docker tag $REGISTRY:${{ github.ref_name }} $ECR_REGISTRY:${{ github.ref_name }}
            docker push $ECR_REGISTRY:${{ github.ref_name }}
            # If this is a version tag, also update 'latest' tag
            if [[ "${{ github.ref }}" =~ ^refs/tags/v[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
              docker tag $REGISTRY:${{ github.ref_name }} $ECR_REGISTRY:latest
              docker push $ECR_REGISTRY:latest
            fi
          fi
